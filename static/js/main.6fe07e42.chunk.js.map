{"version":3,"sources":["index.js"],"names":["Circle","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","height","this","props","diameter","width","background","color","border","borderColor","text","infoString","React","Component","Form","_this","Object","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleDateChange","bind","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleCapChange","handleFilterChange","event","onDateChange","parseInt","target","value","onCapChange","onFilterChange","currDate","month","year","type","min","max","defaultValue","onChange","list","id","temp","displayFilter","total","name","checked","cap","disabled","Map","google_map_react__WEBPACK_IMPORTED_MODULE_8___default","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","draggable","circles","App","_this2","state","buildings","colleges","students","temps","index","nlat","slat","axios","get","then","res","setState","data","handleZoomChange","usage","Math","log","length","initMonth","initYear","floor","ret","curr_temp","_this3","map","bldg","lat","lng","description","round","count","innerText","filter","getColor","normalize","_this4","i","newFilter","bounds","ne","se","getDate","getTemp","getTotal","getUsage","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"oPAMMA,0LAEF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,MAAO,CAACC,OAAQC,KAAKC,MAAMC,SAAUC,MAAOH,KAAKC,MAAMC,SAAUE,WAAYJ,KAAKC,MAAMI,MAAOC,OAAQ,aAAeN,KAAKC,MAAMM,cAC/Jb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeG,KAAKC,MAAMO,KAAKd,EAAAC,EAAAC,cAAA,WAAMI,KAAKC,MAAMQ,oBAJnDC,IAAMC,YAUrBC,cACJ,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlB,KAAMC,KACDkB,iBAAmBN,EAAKM,iBAAiBC,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACxBA,EAAKS,gBAAkBT,EAAKS,gBAAgBF,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACvBA,EAAKU,mBAAqBV,EAAKU,mBAAmBH,KAAxBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAJTA,gFAOFW,GACfxB,KAAKC,MAAMwB,aAAaC,SAASF,EAAMG,OAAOC,gDAGhCJ,GACdxB,KAAKC,MAAM4B,YAAYH,SAASF,EAAMG,OAAOC,mDAG5BJ,GACjBxB,KAAKC,MAAM6B,eAAeJ,SAASF,EAAMG,OAAOC,yCAIhD,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,2IAGAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WAAMI,KAAKC,MAAM8B,SAASC,MAA1B,IAAkChC,KAAKC,MAAM8B,SAASE,MACtDvC,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQC,IAAK,EAAGC,IAAK,IAAKC,aAAc,IAAKC,SAAUtC,KAAKmB,iBAAkBoB,KAAK,aAC/F7C,EAAAC,EAAAC,cAAA,YAAU4C,GAAG,YACX9C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,sBACuBG,KAAKC,MAAMwC,MAElC/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAyC,IAA7BI,KAAKC,MAAMyC,cAAuB,WAAe,eAA7D,KAA+E1C,KAAKC,MAAM0C,MAA1F,IAA+H,IAA7B3C,KAAKC,MAAMyC,eAAuB,QAEtIhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0CACLF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,aAAahB,MAAO,IAAQiB,QAA4B,MAAnB7C,KAAKC,MAAM6C,IAAgBR,SAAUtC,KAAKsB,gBAAiByB,SAAuC,IAA7B/C,KAAKC,MAAMyC,gBAFhJ,WAE+KhD,EAAAC,EAAAC,cAAA,WAC7KF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,aAAahB,MAAO,IAAOiB,QAA4B,MAAnB7C,KAAKC,MAAM6C,IAAeR,SAAUtC,KAAKsB,gBAAiByB,SAAuC,IAA7B/C,KAAKC,MAAMyC,gBAH9I,UAG4KhD,EAAAC,EAAAC,cAAA,WAC1KF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,aAAahB,MAAO,IAAMiB,QAA4B,MAAnB7C,KAAKC,MAAM6C,IAAcR,SAAUtC,KAAKsB,gBAAiByB,SAAuC,IAA7B/C,KAAKC,MAAMyC,gBAJ5I,SAIyKhD,EAAAC,EAAAC,cAAA,WACvKF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,aAAahB,MAAO,IAAKiB,QAA4B,MAAnB7C,KAAKC,MAAM6C,IAAaR,SAAUtC,KAAKsB,gBAAiByB,SAAuC,IAA7B/C,KAAKC,MAAMyC,gBAL1I,OAKqKhD,EAAAC,EAAAC,cAAA,WACnKF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,aAAahB,MAAO,GAAIiB,QAA4B,KAAnB7C,KAAKC,MAAM6C,IAAYR,SAAUtC,KAAKsB,gBAAiByB,SAAuC,IAA7B/C,KAAKC,MAAMyC,gBANxI,MAMkKhD,EAAAC,EAAAC,cAAA,WAChKF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,aAAahB,MAAO,SAAUiB,QAA4B,WAAnB7C,KAAKC,MAAM6C,IAAkBR,SAAUtC,KAAKsB,gBAAiByB,SAAuC,IAA7B/C,KAAKC,MAAMyC,gBAPpJ,WAQMhD,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,+BACLF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,iBAAiBhB,MAAO,EAAGiB,QAAsC,IAA7B7C,KAAKC,MAAMyC,cAAqBJ,SAAUtC,KAAKuB,qBAF9G,iBAEkJ7B,EAAAC,EAAAC,cAAA,WAChJF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,iBAAiBhB,MAAO,EAAGiB,QAAsC,IAA7B7C,KAAKC,MAAMyC,cAAqBJ,SAAUtC,KAAKuB,qBAH9G,iBAGkJ7B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACrJF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,uDACLF,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,QAAQU,KAAK,iBAAiBhB,MAAO,EAAGiB,QAAsC,IAA7B7C,KAAKC,MAAMyC,cAAqBJ,SAAUtC,KAAKuB,qBAL9G,wBAKyJ7B,EAAAC,EAAAC,cAAA,YACnJF,EAAAC,EAAAC,cAAA,mBA3DKc,IAAMC,WAiEnBqC,mLAEF,OACEtD,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,OAAQ,OAAQI,MAAO,SACnCT,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CACEuD,iBAAkB,CAAEC,IAAK,2CACzBC,cAAepD,KAAKC,MAAMoD,OAC1BC,YAAatD,KAAKC,MAAMsD,KACxBC,WAAW,EACXlB,SAAUtC,KAAKC,MAAMqC,UAEtBtC,KAAKC,MAAMwD,iBAXF/C,IAAMC,WAkBlB+C,cAWJ,SAAAA,EAAYzD,GAAO,IAAA0D,EAAA,OAAA7C,OAAAC,EAAA,EAAAD,CAAAd,KAAA0D,IACjBC,EAAA7C,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA4C,GAAAxC,KAAAlB,KAAMC,KACD2D,MAAQ,CACXC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,MAAO,IACPnB,IAAK,SACLoB,KAAM,QACNC,KAAM,QACNzB,cAAe,GAGjB0B,IAAMC,IAAI,2DACPC,KAAK,SAAAC,GACJZ,EAAKa,SAAS,CACZX,UAAWU,EAAIE,SAIrBL,IAAMC,IAAI,oDACPC,KAAK,SAAAC,GACJZ,EAAKa,SAAS,CACZR,MAAOO,EAAIE,SAIjBL,IAAMC,IAAI,qDACPC,KAAK,SAAAC,GACJZ,EAAKa,SAAS,CACZV,SAAUS,EAAIE,SAIpBL,IAAMC,IAAI,qDACPC,KAAK,SAAAC,GACJZ,EAAKa,SAAS,CACZT,SAAUQ,EAAIE,SAGpBd,EAAKxC,iBAAmBwC,EAAKxC,iBAAiBC,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA6C,KACxBA,EAAKrC,gBAAkBqC,EAAKrC,gBAAgBF,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA6C,KACvBA,EAAKpC,mBAAqBoC,EAAKpC,mBAAmBH,KAAxBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA6C,KAC1BA,EAAKe,iBAAmBf,EAAKe,iBAAiBtD,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA6C,KA5CPA,yEA+CTgB,GAKR,OAHIA,EAAQ,IACVA,EAAQ,GAEe,KAAlBC,KAAKC,IAAIF,IAAkB3E,KAAK4D,MAAMM,KAAOlE,KAAK4D,MAAMO,wCAI/D,OAAInE,KAAK4D,MAAMI,MAAMc,OAAS,GAAK9E,KAAK4D,MAAMI,MAAMhE,KAAK4D,MAAMK,OACtDjE,KAAK4D,MAAMI,MAAMhE,KAAK4D,MAAMK,OAE9B,gDASP,MAAO,CACLjC,MANa,CACX,UAAW,WAAY,QAAS,QAAS,MACzC,OAAQ,OAAQ,SAAU,YAC1B,UAAW,WAAY,aAGVhC,KAAKC,MAAM8E,UAAY/E,KAAK4D,MAAMK,OAAS,IAC1DhC,KAAMjC,KAAKC,MAAM+E,SAAWJ,KAAKK,OAAOjF,KAAKC,MAAM8E,UAAY/E,KAAK4D,MAAMK,OAAS,wCAMrF,IAAIiB,EAAM,UACV,GAAIlF,KAAK4D,MAAMI,MAAMc,OAAS,GAAK9E,KAAK4D,MAAMI,MAAMhE,KAAK4D,MAAMK,OAAQ,CACrE,IAAMkB,EAAYnF,KAAK4D,MAAMI,MAAMhE,KAAK4D,MAAMK,OAE5CiB,EADEC,EAAY,GACR,UACGA,EAAY,GACf,WACGA,EAAY,GACf,WACGA,EAAY,GACf,YACGA,EAAY,GACf,WACGA,EAAY,GACf,WAEA,UAGV,OAAOD,qCAIE,IAAAE,EAAApF,KACT,GAAiC,IAA7BA,KAAK4D,MAAMlB,cACb,OAAO1C,KAAK4D,MAAMG,SAASsB,IAAI,SAACC,GAC9B,OACI5F,EAAAC,EAAAC,cAACH,EAAD,CAAQ0D,IAAKzB,SAAS4D,EAAK9C,IAAK+C,IAAKD,EAAKC,IAAKC,IAAKF,EAAKE,IAAKhF,KAAM8E,EAAKG,YAAahF,WAAYmE,KAAKc,MAAmB,IAAbJ,EAAKK,OAAa,IAAM,YAAazF,SAAUoF,EAAKK,OAAS,MAASP,EAAKxB,MAAMM,KAAOkB,EAAKxB,MAAMO,OAAQ9D,MAAO,wBAAyBE,YAAa,QAASqF,UAAWN,EAAKK,UAG/R,GAAiC,IAA7B3F,KAAK4D,MAAMlB,cAAqB,CACzC,IAAMoB,EAAW9D,KAAK4D,MAAME,SAAS+B,OAAO,SAACP,GACzC,OAAOA,EAAKX,MAAMS,EAAKxB,MAAMK,OAASmB,EAAKxB,MAAMd,MAE/CzC,EAAQL,KAAK8F,WACnB,OAAOhC,EAASuB,IAAI,SAACC,GACnB,OACI5F,EAAAC,EAAAC,cAACH,EAAD,CAAQ0D,IAAKmC,EAAK9C,GAAI+C,IAAKD,EAAKC,IAAKC,IAAKF,EAAKE,IAAKhF,KAAM8E,EAAKG,YAAahF,WAAYmE,KAAKc,MAAqC,IAA/BJ,EAAKX,MAAMS,EAAKxB,MAAMK,QAAc,IAAM,OAAQ/D,SAAUkF,EAAKW,UAAUT,EAAKX,MAAMS,EAAKxB,MAAMK,QAAS5D,MAAO,QAAUA,EAAQ,UAAWE,YAAa,OAAS6E,EAAKU,WAAa,QAI/R,IAAMjC,EAAY7D,KAAK4D,MAAMC,UAAUgC,OAAO,SAACP,GAC3C,OAAOA,EAAKX,MAAMS,EAAKxB,MAAMK,OAASmB,EAAKxB,MAAMd,MAE/CzC,EAAQL,KAAK8F,WACnB,OAAOjC,EAAUwB,IAAI,SAACC,GACpB,OACI5F,EAAAC,EAAAC,cAACH,EAAD,CAAQ0D,IAAKmC,EAAK9C,GAAI+C,IAAKD,EAAKC,IAAKC,IAAKF,EAAKE,IAAKhF,KAAM8E,EAAKG,YAAahF,WAAYmE,KAAKc,MAAqC,IAA/BJ,EAAKX,MAAMS,EAAKxB,MAAMK,QAAc,IAAM,OAAQ/D,SAAUkF,EAAKW,UAAUT,EAAKX,MAAMS,EAAKxB,MAAMK,QAAS5D,MAAO,QAAUA,EAAQ,UAAWE,YAAa,OAAS6E,EAAKU,WAAa,2CAOxR,IAAAE,EAAAhG,KACL2C,EAAQ,EACZ,GAAiC,IAA7B3C,KAAK4D,MAAMlB,cACb,IAAK,IAAIuD,EAAI,EAAGA,EAAIjG,KAAK4D,MAAMG,SAASe,OAAQmB,IAC9CtD,GAAS3C,KAAK4D,MAAMG,SAASkC,GAAGN,WAE7B,GAAiC,IAA7B3F,KAAK4D,MAAMlB,cAIpB,IAHA,IAAMoB,EAAW9D,KAAK4D,MAAME,SAAS+B,OAAO,SAACP,GACzC,OAAOA,EAAKX,MAAMqB,EAAKpC,MAAMK,OAAS+B,EAAKpC,MAAMd,MAE5CmD,EAAI,EAAGA,EAAInC,EAASgB,OAAQmB,IACnCtD,GAASmB,EAASmC,GAAGtB,MAAM3E,KAAK4D,MAAMK,YAMxC,IAHA,IAAMJ,EAAY7D,KAAK4D,MAAMC,UAAUgC,OAAO,SAACP,GAC3C,OAAOA,EAAKX,MAAMqB,EAAKpC,MAAMK,OAAS+B,EAAKpC,MAAMd,MAE5CmD,EAAI,EAAGA,EAAIpC,EAAUiB,OAAQmB,IACpCtD,GAASkB,EAAUoC,GAAGtB,MAAM3E,KAAK4D,MAAMK,OAG3C,OAAOW,KAAKc,MAAc,IAAR/C,GAAc,6CAIjBsB,GACXA,IAAUjE,KAAK4D,MAAMK,OACvBjE,KAAKwE,SAAS,CACZP,MAAOA,4CAMGnB,GACVA,IAAQ9C,KAAK4D,MAAMd,KACrB9C,KAAKwE,SAAS,CACZ1B,IAAKA,+CAMQoD,GACbA,IAAclG,KAAK4D,MAAMlB,eAC3B1C,KAAKwE,SAAS,CACZ9B,cAAewD,6CAKJ1E,IACXxB,KAAK4D,OAAUpC,EAAM2E,OAAOC,GAAGb,MAAQvF,KAAK4D,MAAMM,MAAQ1C,EAAM2E,OAAOE,GAAGd,MAAQvF,KAAK4D,MAAMO,MAC/FnE,KAAKwE,SAAS,CACZN,KAAM1C,EAAM2E,OAAOC,GAAGb,IACtBpB,KAAM3C,EAAM2E,OAAOE,GAAGd,uCAM1B,OACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgB,EAAD,CAAMa,aAAczB,KAAKmB,iBAAkBU,YAAa7B,KAAKsB,gBAAiBQ,eAAgB9B,KAAKuB,mBAAoBuB,IAAK9C,KAAK4D,MAAMd,IAAKf,SAAU/B,KAAKsG,UAAW7D,KAAMzC,KAAKuG,UAAW7D,cAAe1C,KAAK4D,MAAMlB,cAAeC,MAAO3C,KAAKwG,aACjP9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoD,EAAD,CAAKK,OAAQrD,KAAKC,MAAMoD,OAAQE,KAAMvD,KAAKC,MAAMsD,KAAME,QAASzD,KAAKyG,WAAYnE,SAAUtC,KAAK0E,4BA9MxFhE,IAAMC,WAAlB+C,EACGgD,aAAe,CACpBrD,OAAQ,CACNkC,IAAK,QACLC,IAAK,UAEPjC,KAAM,KACNwB,UAAW,EACXC,SAAU,MA+Md2B,IAASC,OACPlH,EAAAC,EAAAC,cAAC8D,EAAD,MACAmD,SAASC,eAAe","file":"static/js/main.6fe07e42.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nimport './index.css';\n\nclass Circle extends React.Component {\n  render() {\n    return (\n      <div className=\"circle tooltip\" style={{height: this.props.diameter, width: this.props.diameter, background: this.props.color, border: \"1px solid \" + this.props.borderColor}}>\n        <span className=\"tooltiptext\">{this.props.text}<br/>{this.props.infoString}</span>\n      </div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.props.onDateChange(parseInt(event.target.value));\n  }\n\n  handleCapChange(event) {\n    this.props.onCapChange(parseInt(event.target.value));\n  }\n\n  handleFilterChange(event) {\n    this.props.onFilterChange(parseInt(event.target.value));\n  }\n\n  render() {\n    return (\n      <div className=\"options\">\n        <h1>Bulldog Energy</h1>\n        <div>\n          Explore energy consumption at Yale University. Use the following filters to visualize data across many different dimensions.\n        </div>\n        <h3>Options:</h3>\n        <div className=\"date\">\n          <div>{this.props.currDate.month} {this.props.currDate.year}</div>\n          <input type=\"range\" min={0} max={181} defaultValue={181} onChange={this.handleDateChange} list=\"steplist\"/>\n          <datalist id=\"steplist\">\n            <option>0</option>\n            <option>60</option>\n            <option>120</option>\n            <option>180</option>\n          </datalist>\n        </div>\n        <div className=\"temp\">\n          Avg. temp (&deg;F): {this.props.temp}\n        </div>\n        <div>\n          <h3>Total {(this.props.displayFilter === 2 && \"students\") || \"energy usage\"}: {this.props.total} {this.props.displayFilter !== 2 && \"kWh\"}</h3>\n        </div>\n        <div className=\"cap\">\n          <div><b>Max energy usage to display:</b></div>\n          <input type=\"radio\" name=\"energy-cap\" value={100000} checked={this.props.cap === 100000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} /> 100,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={10000} checked={this.props.cap === 10000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} /> 10,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={1000} checked={this.props.cap === 1000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} /> 1,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={100} checked={this.props.cap === 100} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} /> 100<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={10} checked={this.props.cap === 10} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} /> 10<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={99999999} checked={this.props.cap === 99999999} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} /> No cap\n        </div><br/>\n        <div className=\"studets-or-energy\">\n          <div><b>Filter buildings:</b></div>\n          <input type=\"radio\" name=\"display-filter\" value={0} checked={this.props.displayFilter === 0} onChange={this.handleFilterChange} /> All buildings<br/>\n          <input type=\"radio\" name=\"display-filter\" value={1} checked={this.props.displayFilter === 1} onChange={this.handleFilterChange} /> Only colleges<br/><br/>\n          <div><b>Display number of students per dormitory:</b></div>\n          <input type=\"radio\" name=\"display-filter\" value={2} checked={this.props.displayFilter === 2} onChange={this.handleFilterChange} /> Students (Fall 2018)<br/>\n        </div><br/>\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n  render() {\n    return (\n      <div style={{ height: '92vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAfvrqHTxlg8C0nxideXF6wQS6ZhKTAEKc' }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          draggable={true}\n          onChange={this.props.onChange}\n        >\n        {this.props.circles}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  static defaultProps = {\n    center: {\n      lat: 41.3089,\n      lng: 287.0696,\n    },\n    zoom: 14.5,\n    initMonth: 6,\n    initYear: 2002,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      colleges: [],\n      students: [],\n      temps: [],\n      index: 180,\n      cap: 99999999,\n      nlat: 41.3187,\n      slat: 41.2991,\n      displayFilter: 0,\n    };\n    // get building usage data\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/energyovertime\")\n      .then(res => {\n        this.setState({\n          buildings: res.data,\n        });\n      });\n    // get weather data\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/weather\")\n      .then(res => {\n        this.setState({\n          temps: res.data,\n        });\n      });\n    // get energy for only residential colleges\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/rcenergy\")\n      .then(res => {\n        this.setState({\n          colleges: res.data,\n        });\n      });\n    // get number of students in each res college\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/students\")\n      .then(res => {\n        this.setState({\n          students: res.data,\n        });\n      });\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleZoomChange = this.handleZoomChange.bind(this);\n  }\n \n  normalize(usage) {\n    // return 25;\n    if (usage < 3) {\n      usage = 3;\n    }\n    return Math.log(usage) * 0.125 / (this.state.nlat - this.state.slat);\n  }\n\n  getTemp() {\n    if (this.state.temps.length > 0 && this.state.temps[this.state.index]) {\n      return this.state.temps[this.state.index];\n    }\n    return \"Unavailable\";\n  }\n\n  getDate() {\n    const months = [\n        'January', 'February', 'March', 'April', 'May',\n        'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n      ];\n    return {\n      month: months[(this.props.initMonth + this.state.index) % 12],\n      year: this.props.initYear + Math.floor((this.props.initMonth + this.state.index) / 12)\n    };\n  }\n\n  // the RGB string R,G,B\n  getColor() {\n    var ret = \"255,0,0\";\n    if (this.state.temps.length > 0 && this.state.temps[this.state.index]) {\n      const curr_temp = this.state.temps[this.state.index];\n      if (curr_temp < 30) {\n        ret = \"0,0,255\";\n      } else if (curr_temp < 40) {\n        ret = \"42,0,212\";\n      } else if (curr_temp < 50) {\n        ret = \"85,0,170\";\n      } else if (curr_temp < 60) {\n        ret = \"127,0,127\";\n      } else if (curr_temp < 70) {\n        ret = \"170,0,85\";\n      } else if (curr_temp < 80) {\n        ret = \"212,0,42\";\n      } else {\n        ret = \"255,0,0\";\n      }\n    }\n    return ret;\n  }\n\n  // returns the circles for this specific date\n  getUsage() {\n    if (this.state.displayFilter === 2) {    // get just student counts\n      return this.state.students.map((bldg) => {\n        return (\n            <Circle key={parseInt(bldg.id)} lat={bldg.lat} lng={bldg.lng} text={bldg.description} infoString={Math.round(bldg.count * 100)/100 + \" students\"} diameter={bldg.count * (0.001 / (this.state.nlat - this.state.slat))} color={\"rgba(0, 255, 0, 0.15)\"} borderColor={\"green\"} innerText={bldg.count} />\n          );\n      });\n    } else if (this.state.displayFilter === 1) {   // get only college data\n      const colleges = this.state.colleges.filter((bldg) => {\n          return bldg.usage[this.state.index] < this.state.cap;\n        });\n      const color = this.getColor();\n      return colleges.map((bldg) => {\n        return (\n            <Circle key={bldg.id} lat={bldg.lat} lng={bldg.lng} text={bldg.description} infoString={Math.round(bldg.usage[this.state.index] * 100)/100 + \" kWh\"} diameter={this.normalize(bldg.usage[this.state.index])} color={\"rgba(\" + color + \", 0.15)\"} borderColor={\"rgb(\" + this.getColor() + \")\"} />\n          );\n      });\n    } else {    // get all buildings\n      const buildings = this.state.buildings.filter((bldg) => {\n          return bldg.usage[this.state.index] < this.state.cap;\n        });\n      const color = this.getColor();\n      return buildings.map((bldg) => {\n        return (\n            <Circle key={bldg.id} lat={bldg.lat} lng={bldg.lng} text={bldg.description} infoString={Math.round(bldg.usage[this.state.index] * 100)/100 + \" kWh\"} diameter={this.normalize(bldg.usage[this.state.index])} color={\"rgba(\" + color + \", 0.15)\"} borderColor={\"rgb(\" + this.getColor() + \")\"} />\n          );\n      });\n    }\n  }\n\n  // compute total usage/students and return\n  getTotal() {\n    var total = 0;\n    if (this.state.displayFilter === 2) {\n      for (let i = 0; i < this.state.students.length; i++) {\n        total += this.state.students[i].count;\n      }\n    } else if (this.state.displayFilter === 1) {\n      const colleges = this.state.colleges.filter((bldg) => {\n          return bldg.usage[this.state.index] < this.state.cap;\n        });\n      for (let i = 0; i < colleges.length; i++) {\n        total += colleges[i].usage[this.state.index];\n      }\n    } else {\n      const buildings = this.state.buildings.filter((bldg) => {\n          return bldg.usage[this.state.index] < this.state.cap;\n        });\n      for (let i = 0; i < buildings.length; i++) {\n        total += buildings[i].usage[this.state.index];\n      }\n    }\n    return Math.round(total * 1000)/1000;\n  }\n\n  // handles date change from form\n  handleDateChange(index) {\n    if (index !== this.state.index) {\n      this.setState({\n        index: index,\n      });\n    }\n  }\n\n  // handle change in energy cap\n  handleCapChange(cap) {\n    if (cap !== this.state.cap) {\n      this.setState({\n        cap: cap,\n      });\n    }\n  }\n\n  // handle filter change\n  handleFilterChange(newFilter) {\n    if (newFilter !== this.state.displayFilter) {\n      this.setState({\n        displayFilter: newFilter,\n      })\n    }\n  }\n\n  handleZoomChange(event) {\n    if (this.state && (event.bounds.ne.lat !== this.state.nlat || event.bounds.se.lat !== this.state.slat)) {\n      this.setState({\n        nlat: event.bounds.ne.lat,\n        slat: event.bounds.se.lat,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form onDateChange={this.handleDateChange} onCapChange={this.handleCapChange} onFilterChange={this.handleFilterChange} cap={this.state.cap} currDate={this.getDate()} temp={this.getTemp()} displayFilter={this.state.displayFilter} total={this.getTotal()} />\n        <div className=\"map\">\n          <Map center={this.props.center} zoom={this.props.zoom} circles={this.getUsage()} onChange={this.handleZoomChange}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}