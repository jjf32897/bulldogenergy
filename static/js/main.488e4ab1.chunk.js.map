{"version":3,"sources":["index.js"],"names":["Circle","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","height","this","props","diameter","width","background","color","border","borderColor","text","infoString","React","Component","Form","_this","Object","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleDateChange","bind","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleCapChange","handleFilterChange","event","onDateChange","parseInt","target","value","onCapChange","onFilterChange","currDate","month","year","type","min","max","defaultValue","onChange","list","id","temp","name","checked","cap","disabled","displayFilter","Map","google_map_react__WEBPACK_IMPORTED_MODULE_8___default","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","draggable","circles","App","_this2","state","buildings","colleges","students","temps","index","nlat","slat","axios","get","then","res","setState","data","handleZoomChange","usage","Math","log","length","initMonth","initYear","floor","_this3","map","bldg","lat","lng","description","round","count","innerText","normalize","filter","newFilter","bounds","ne","se","getDate","getTemp","getUsage","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.488e4ab1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nimport './index.css';\n\nclass Circle extends React.Component {\n  render() {\n    return (\n      <div className=\"circle tooltip\" style={{height: this.props.diameter, width: this.props.diameter, background: this.props.color, border: \"1px solid \" + this.props.borderColor}}>\n        <span className=\"tooltiptext\">{this.props.text}<br/>{this.props.infoString}</span>\n      </div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.props.onDateChange(parseInt(event.target.value));\n  }\n\n  handleCapChange(event) {\n    this.props.onCapChange(parseInt(event.target.value));\n  }\n\n  handleFilterChange(event) {\n    this.props.onFilterChange(parseInt(event.target.value));\n  }\n\n  render() {\n    return (\n      <div className=\"options\">\n        <h1>Yenergi</h1>\n        <div>\n          Explore energy consumption at Yale University. Use the following filters to visualize data across many different dimensions.\n        </div>\n        <h3>Options:</h3>\n        <div className=\"date\">\n          <div>{this.props.currDate.month} {this.props.currDate.year}</div>\n          <input type=\"range\" min={0} max={181} defaultValue={181} onChange={this.handleDateChange} list=\"steplist\"/>\n          <datalist id=\"steplist\">\n            <option>0</option>\n            <option>60</option>\n            <option>120</option>\n            <option>180</option>\n          </datalist>\n        </div>\n        <div className=\"temp\">\n          Avg. temp (F): {this.props.temp}\n        </div>\n        <div className=\"cap\">\n          <div>Max energy usage to display:</div>\n          <input type=\"radio\" name=\"energy-cap\" value={100000} checked={this.props.cap === 100000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />100,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={10000} checked={this.props.cap === 10000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />10,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={1000} checked={this.props.cap === 1000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />1,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={100} checked={this.props.cap === 100} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />100<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={10} checked={this.props.cap === 10} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />10<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={99999999} checked={this.props.cap === 99999999} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />No cap\n        </div><br/>\n        <div className=\"studets-or-energy\">\n          <input type=\"radio\" name=\"display-filter\" value={0} checked={this.props.displayFilter === 0} onChange={this.handleFilterChange} />All buildings<br/>\n          <input type=\"radio\" name=\"display-filter\" value={1} checked={this.props.displayFilter === 1} onChange={this.handleFilterChange} />Only colleges<br/><br/>\n          <div>Display number of students per dormitory:</div>\n          <input type=\"radio\" name=\"display-filter\" value={2} checked={this.props.displayFilter === 2} onChange={this.handleFilterChange} />Students<br/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n  render() {\n    return (\n      <div style={{ height: '92vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAfvrqHTxlg8C0nxideXF6wQS6ZhKTAEKc' }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          draggable={true}\n          onChange={this.props.onChange}\n        >\n        {this.props.circles}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  static defaultProps = {\n    center: {\n      lat: 41.3089,\n      lng: 287.0696,\n    },\n    zoom: 14.5,\n    initMonth: 6,\n    initYear: 2002,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      colleges: [],\n      students: [],\n      temps: [],\n      index: 180,\n      cap: 99999999,\n      nlat: 41.3187,\n      slat: 41.2991,\n      displayFilter: 0,\n    };\n    // get building usage data\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/energyovertime\")\n      .then(res => {\n        this.setState({\n          buildings: res.data,\n        });\n      });\n    // get weather data\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/weather\")\n      .then(res => {\n        this.setState({\n          temps: res.data,\n        });\n      });\n    // get energy for only residential colleges\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/rcenergy\")\n      .then(res => {\n        this.setState({\n          colleges: res.data,\n        });\n      });\n    // get number of students in each res college\n    axios.get(\"https://yenergi-app-heroku.herokuapp.com/students\")\n      .then(res => {\n        this.setState({\n          students: res.data,\n        });\n      });\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleZoomChange = this.handleZoomChange.bind(this);\n  }\n \n  normalize(usage) {\n    // return 25;\n    if (usage < 3) {\n      usage = 3;\n    }\n    return Math.log(usage) * 0.125 / (this.state.nlat - this.state.slat);\n  }\n\n  getTemp() {\n    if (this.state.temps.length > 0 && this.state.temps[this.state.index]) {\n      return this.state.temps[this.state.index];\n    }\n    return \"Unavailable\";\n  }\n\n  getDate() {\n    const months = [\n        'January', 'February', 'March', 'April', 'May',\n        'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n      ];\n    return {\n      month: months[(this.props.initMonth + this.state.index) % 12],\n      year: this.props.initYear + Math.floor((this.props.initMonth + this.state.index) / 12)\n    };\n  }\n\n  // returns the circles for this specific date\n  getUsage() {\n    if (this.state.displayFilter === 2) {    // get just student counts\n      return this.state.students.map((bldg) => {\n        return (\n            <Circle key={parseInt(bldg.id)} lat={bldg.lat} lng={bldg.lng} text={bldg.description} infoString={Math.round(bldg.count * 100)/100 + \" students\"} diameter={bldg.count * (0.001 / (this.state.nlat - this.state.slat))} color={\"rgba(0, 255, 0, 0.25)\"} borderColor={\"green\"} innerText={bldg.count} />\n          );\n      });\n    } else if (this.state.displayFilter === 1) {   // get only college data\n      return this.state.colleges.map((bldg) => {\n        return (\n            <Circle key={bldg.id} lat={bldg.lat} lng={bldg.lng} text={bldg.description} infoString={Math.round(bldg.usage[this.state.index] * 100)/100 + \" kWh\"} diameter={this.normalize(bldg.usage[this.state.index])} color={\"rgba(0, 0, 255, 0.25)\"} borderColor={\"blue\"} />\n          );\n      });\n    } else {    // get all buildings\n      const buildings = this.state.buildings.filter((bldg) => {\n          return bldg.usage[this.state.index] < this.state.cap;\n        });\n\n      return buildings.map((bldg) => {\n        return (\n            <Circle key={bldg.id} lat={bldg.lat} lng={bldg.lng} text={bldg.description} infoString={Math.round(bldg.usage[this.state.index] * 100)/100 + \" kWh\"} diameter={this.normalize(bldg.usage[this.state.index])} color={\"rgba(255, 0, 0, 0.25)\"} borderColor={\"red\"} />\n          );\n      });\n    }\n  }\n\n  // handles date change from form\n  handleDateChange(index) {\n    if (index !== this.state.index) {\n      this.setState({\n        index: index,\n      });\n    }\n  }\n\n  // handle change in energy cap\n  handleCapChange(cap) {\n    if (cap !== this.state.cap) {\n      this.setState({\n        cap: cap,\n      });\n    }\n  }\n\n  // handle filter change\n  handleFilterChange(newFilter) {\n    if (newFilter !== this.state.displayFilter) {\n      this.setState({\n        displayFilter: newFilter,\n      })\n    }\n  }\n\n  handleZoomChange(event) {\n    if (this.state && (event.bounds.ne.lat !== this.state.nlat || event.bounds.se.lat !== this.state.slat)) {\n      this.setState({\n        nlat: event.bounds.ne.lat,\n        slat: event.bounds.se.lat,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form onDateChange={this.handleDateChange} onCapChange={this.handleCapChange} onFilterChange={this.handleFilterChange} cap={this.state.cap} currDate={this.getDate()} temp={this.getTemp()} displayFilter={this.state.displayFilter} />\n        <div className=\"map\">\n          <Map center={this.props.center} zoom={this.props.zoom} circles={this.getUsage()} onChange={this.handleZoomChange}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}